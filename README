---------------------------
Setting up your environment 
---------------------------

To set up your environment for this assignment to support OpenMP development,
put the following commands in your .bashrc or .cshrc or run them every time 
you log in:

	module use /projects/comp422/modulefiles
	module load assignment2
	module load hpctoolkit

---------------------------
Contents of this directory
---------------------------

  ./lu-decomposition/interactive.sh: 
    a command that you can source to get a command line prompt
    in the interactive queue on a compute node

    usage:

      source interactive.sh

  ./lu-decomposition/reservation.sh: 
    a command that you can source to get a command line prompt
    in the interactive queue on a compute node using the class
    reservation

    usage:

      source reservation.sh

  ./lu-decomposition/display.sh:
    to understand thread affinity, execute the command below to set your 
    environment variables to display information about OpenMP thread bindings.
    when you run programs with these settings, the OpenMP runtime will 
    describe HW thread bindings for OpenMP worker threads.

    usage:

      source display.sh

  ./lu-decomposition/lu-omp.cpp: template for OpenMP solution
  
    usage:
       
       make
       ./lu-omp matrix_size workers print_matrix print_diff 
       		# runs parallel version
       		# matrix_size is the size of the matrix A
		# workers is the number of openmp threads to execute LU decomposition on
		# print_matrix is an int 0/1 to print the corresponding matrices obtained after decomposition. Default = 0
		# print_diff is an int 0/1 to print the L2,1 Norm. Default = 0

  ./lu-decomposition/Makefile:
    a Makefile that includes recipes for building and running your program

    usage:

      make # builds your code
      make runp # runs a parallel version of your code on W workers
      make runs # runs a serial version of your code on one worker
      make check # runs your parallel code with Intel Thread Checker
      make runp-hpc # runs a parallel version with hpctoolkit collecting the events MEM_LOAD_UOPS_LLC_MISS_RETIRED for REMOTE_DRAM and LOCAL_DRAM 
      	with matrix size = 7000 and workers = available threads

  ./lu-decomposition/submit.sbatch:
    a script that you can use to launch a batch job that will execute 
    a series of tests on 1..32 threads on a compute node

    usage:
        sbatch submit.sbatch
	
  LU Decomposition report.pdf:
     report for the project
